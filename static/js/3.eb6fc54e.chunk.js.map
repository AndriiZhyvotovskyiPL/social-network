{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/user.png","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/wallpaper.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","onClick","className","s","formControlSubmitError","createField","Input","type","Textarea","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","src","wallpaper","alt","descriptionBlock","photos","large","userPhoto","profilePhoto","target","files","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","required","React","memo","postsElements","posts","p","id","postsBlock","addPost","newPostText","connect","state","profilePage","MyPosts","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.eb6fc54e.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/user.d6759143.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2cHWd\",\"profilePhoto\":\"ProfileInfo_profilePhoto__1BWM8\",\"contact\":\"ProfileInfo_contact__2Lg3t\",\"formControlSubmitError\":\"ProfileInfo_formControlSubmitError__GuPzh\"};","module.exports = __webpack_public_path__ + \"static/media/wallpaper.0ae714f7.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1IM4_\",\"posts\":\"MyPosts_posts__6aKia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__IaCD8\",\"posts\":\"Posts_posts__aKCOT\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button onClick={() => {}}>Save profile</button>\r\n        </div>\r\n        {error &&\r\n        <div className={s.formControlSubmitError}>\r\n            {error}\r\n        </div>}\r\n        <div><b>Full Name: </b>{createField('fullName', Input, 'Full Name', [])}</div>\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            {createField('lookingForAJob', Input, '', [], {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills:</b>\r\n            {createField('lookingForAJobDescription', Textarea, 'My professional skills', [])}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b>\r\n            {createField('aboutMe', Textarea, 'About me', [])}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b>\r\n            {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: </b> {createField('contacts.' + key, Input, key, [])}\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport wallpaper from '../../../assets/images/wallpaper.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, savePhoto, isOwner, status, updateStatus, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onPhotoUpdate = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={wallpaper} alt=\"wallpaper\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto}\r\n                     className={s.profilePhoto} alt=\"\"/>\r\n                {isOwner && <input type={'file'} onChange={onPhotoUpdate}/>}\r\n                <div><b>Status:</b><ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit profile</button>\r\n        </div>}\r\n        <div><b>Full Name: </b>{profile.fullName}</div>\r\n        <div><b>About me:</b> {profile.aboutMe}</div>\r\n        <div><b>Looking for a job: </b> {!profile.lookingForAJob ? \"don't\" : \"look\"}</div>\r\n        <div><b>My professional skills: </b>{profile.lookingForAJobDescription}</div>\r\n        <div>\r\n            <b>Contacts:</b>\r\n            {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.contact}><b>{contactTitle}: </b> {contactValue}</div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Posts.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.src} alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {createField, Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message}\r\n                                                   likesCount={p.likesCount}\r\n                                                   src={p.src}\r\n                                                   key={p.id}/>)\r\n\r\n    const addNewPost = (formData) => {\r\n        props.addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <AddNewPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField('newPostText', Textarea, 'Post Text', [required, maxLength10])}\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'profileAddNewPost'\r\n})(AddNewPostForm)\r\n\r\nexport default React.memo(MyPosts);","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addPost})(MyPosts);","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"../Profile\";\r\nimport {getProfile, getStatus, savePhoto, saveProfile, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.state}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         saveProfile={this.props.saveProfile}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}