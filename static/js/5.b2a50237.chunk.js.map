{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","src","alt","to","activeClassName","activeLink","name","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","Textarea","required","Dialogs","dialogsElements","dialogs","map","d","key","messagesIncome","m","messagesOutgoing","dialogsItems","messages","formData","sendMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uFCU5MC,EARC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SACbH,EAAMG,U,QCSJC,EAXI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,yBAAKL,UAAWC,IAAEK,QACd,yBAAKC,IAAKR,EAAMQ,IAAKC,IAAI,KACzB,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBT,IAAEU,YAAaZ,EAAMa,Q,yBCyB/DC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAClCC,KAAM,qBADkBD,EAbL,SAACjB,GACpB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,6BACKC,YAAY,iBAAkBC,IAAU,eAAgB,CAACC,IAAUT,KAExE,6BACI,qDAUDU,EA9CC,SAACxB,GACb,IAAIyB,EAAkBzB,EAAM0B,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYf,KAAMe,EAAEf,KAAMP,GAAIsB,EAAEtB,GAAIE,IAAKoB,EAAEpB,IAAKqB,IAAKD,EAAEtB,QAEhGwB,EAAiB9B,EAAM8B,eAAeH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAS5B,QAAS4B,EAAE5B,QAAS0B,IAAKE,EAAEzB,QAEnF0B,EAAmBhC,EAAMgC,iBAAiBL,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAS5B,QAAS4B,EAAE5B,QAAS0B,IAAKE,EAAEzB,QAM3F,OACI,yBAAKL,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAE+B,cACbR,GAEL,yBAAKxB,UAAWC,IAAEgC,UACbJ,GAEL,yBAAK7B,UAAWC,IAAEgC,UACbF,EACD,kBAAChB,EAAD,CAAqBG,SAdX,SAACgB,GACnBnC,EAAMoC,YAAYD,EAASE,sB,+CCZ/BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,OCWRE,sBACXC,aAVkB,SAACJ,GACnB,MAAO,CACHb,QAASa,EAAMK,YAAYlB,QAC3BI,eAAgBS,EAAMK,YAAYd,eAClCE,iBAAkBO,EAAMK,YAAYZ,iBACpCK,eAAgBE,EAAMK,YAAYP,kBAKb,CAACD,mBDTE,SAACS,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAK/C,MAAMwC,OAER,kBAACK,EAAcE,KAAK/C,OAFG,kBAAC,IAAD,CAAUU,GAAG,eAHR,GACXsC,IAAMH,WAOtC,OAAOF,YAASL,EAATK,CAAqCG,KCAjCJ,CAGblB","file":"static/js/5.b2a50237.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2tyjp\",\"dialogsItems\":\"Dialogs_dialogsItems__28BVB\",\"activeLink\":\"Dialogs_activeLink__3FUkO\",\"dialog\":\"Dialogs_dialog__2XrDd\",\"messages\":\"Dialogs_messages__2E2zE\",\"message\":\"Dialogs_message__3JSpH\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.src} alt=\"\"/>\r\n            <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} src={d.src} key={d.id}/>)\r\n\r\n    let messagesIncome = props.messagesIncome.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n    let messagesOutgoing = props.messagesOutgoing.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n    const addNewMessage = (formData) => {\r\n        props.sendMessage(formData.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesIncome}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesOutgoing}\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField('newMessageText', Textarea, 'Message Text', [required, maxLength50])}\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'dialogsNewMessage'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import React from \"react\";\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messagesIncome: state.dialogsPage.messagesIncome,\r\n        messagesOutgoing: state.dialogsPage.messagesOutgoing,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    WithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}